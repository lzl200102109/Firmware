#!nsh
#
# PX4FMU startup script.
#

# Set parameters
set TUNE_ERR ML<<CP4CP4CP4CP4CP4
set LOG_FILE /fs/microsd/bootlog.txt
set PWM_RATE 400
set PWM_DISARMED 900
set PWM_MIN 1075
set PWM_MAX 2000  
set PWM_OUT 1234



#############################
# Start CDC/ACM serial driver
#############################
sercon

###############################
# Try to mount the microSD card
###############################
if mount -t vfat /dev/mmcsd0 /fs/microsd
then
	echo "[i] microSD mounted: /fs/microsd"
	# Start playing the startup tune
	tone_alarm start
else
	tone_alarm MBAGP
	if mkfatfs /dev/mmcsd0
	then
		if mount -t vfat /dev/mmcsd0 /fs/microsd
		then
			echo "[i] microSD card formatted"
		else
			echo "[i] format failed"
			tone_alarm MNBG
			set LOG_FILE /dev/null
		fi
	else
		set LOG_FILE /dev/null
	fi
fi

###########################
# Try to get an USB console
###########################
nshterm /dev/ttyACM0 &

####################################
# Start the ORB (first app to start)
####################################
uorb start

#################
# Load parameters
#################
if mtd start
then
	param select /fs/mtd_params
    if param load
    then
        echo "[param] Loaded: /fs/mtd_params"
    else
        echo "[param] FAILED loading /fs/mtd_params"
        if param reset
        then
        fi
    fi
fi

##############################
# Start system state indicator
##############################
rgbled start

#################################################
# Set AUTOCNF flag to use it in AUTOSTART scripts
#################################################
if param compare SYS_AUTOCONFIG 1
then
    # Wipe out params except RC*
    param reset_nostart RC*
    param set SYS_AUTOCONFIG 0
    param save
else
fi

######################################################
# Check if PX4IO present and update firmware if needed
######################################################
set IO_PRESENT no
set IO_FILE /etc/extras/px4io-v2_default.bin
if px4io checkcrc ${IO_FILE}
then
	echo "PX4IO CRC OK" >> $LOG_FILE
	set IO_PRESENT yes
else
	echo "PX4IO Trying to update" >> $LOG_FILE
	tone_alarm MLL32CP8MB

	if px4io start
	then
		# try to safe px4 io so motor outputs dont go crazy
		if px4io safety_on
		then
			# success! no-op
		else
			# px4io did not respond to the safety command
			px4io stop
		fi
	fi

	if px4io forceupdate 14662 ${IO_FILE}
	then
		usleep 500000
		if px4io checkcrc $IO_FILE
		then
			echo "PX4IO CRC OK after updating" >> $LOG_FILE
			tone_alarm MLL8CDE
			set IO_PRESENT yes
		else
			echo "PX4IO update failed" >> $LOG_FILE
			tone_alarm $TUNE_ERR
		fi
	else
		echo "PX4IO update failed" >> $LOG_FILE
		tone_alarm $TUNE_ERR
	fi
fi

if [ $IO_PRESENT == no ]
then
	echo "[i] ERROR: PX4IO not found"
	tone_alarm $TUNE_ERR
fi

##################
# Waypoint storage
##################
if dataman start
then
fi

##############################
# Sensors system and commander
##############################
ms5611 start
mpu6000 start
adc start
if hmc5883 -C -T -X start
then
fi
if px4flow start
then
fi
sensors start
commander start

######################
# Start primary output
######################
if px4io start
then
	px4io recovery
    # Adjust PX4IO update rate limit
    set PX4IO_LIMIT 400    
    if px4io limit $PX4IO_LIMIT
    then
    else
        echo "[i] Set PX4IO update rate to $PX4IO_LIMIT Hz failed!"
    fi
else
	tone_alarm $TUNE_ERR
fi

##########
# MAVLINK
##########
# Start MAVLink on default port: ttyS1 (TELEM1)
mavlink start -r 1000

# MAVLink on port: ttyS2 (TELEM2)
if param compare SYS_COMPANION 921600
then
	mavlink start -d /dev/ttyS2 -b 921600 -m onboard -r 20000
fi
if param compare SYS_COMPANION 57600
then
	mavlink start -d /dev/ttyS2 -b 57600 -m onboard -r 1000
fi

#########
# Logging
#########
if [ -d /fs/microsd ]
then
    if sdlog2 start -r 200 -a -b 22 -t
    then
    fi
fi

####################
# Multicopters setup
####################
echo "[i] MULTICOPTER"
param set MAV_TYPE 2

# Load mixer and configure outputs
if mixer load /dev/pwm_output0 /etc/mixers/quad_x.main.mix
then
    echo "[i] Mixer: /etc/mixers/quad_x.main.mix on /dev/pwm_output0"
else
    echo "[i] Error loading mixer: /etc/mixers/quad_x.main.mix"
    tone_alarm $TUNE_ERR
fi

# Set PWM output frequency, disarmed, min and max PWM values
pwm rate -c $PWM_OUT -r $PWM_RATE
pwm disarmed -c $PWM_OUT -p $PWM_DISARMED
pwm min -c $PWM_OUT -p $PWM_MIN
pwm max -c $PWM_OUT -p $PWM_MAX

# Start standard multicopter apps
#attitude_estimator_ekf start
#position_estimator_inav start
#mc_att_control start
#mc_pos_control start
#land_detector start multicopter

# Start the navigator
#navigator start

#########################
# Start any custom addons
#########################
if [ -f /fs/microsd/etc/extras.txt ]
then
	echo "[i] Addons script: /fs/microsd/etc/extras.txt"
	sh /fs/microsd/etc/extras.txt
fi

######################
# Run no SD alarm last
######################
if [ $LOG_FILE == /dev/null ]
then
	echo "[i] No microSD card found"
	# Play SOS
	tone_alarm error
fi

###############
# Free some RAM
###############
unset IO_FILE
unset IO_PRESENT
unset LOG_FILE
unset TUNE_ERR
unset PWM_RATE
unset PWM_DISARMED
unset PWM_MIN
unset PWM_MAX
unset PWM_OUT
unset PX4IO_LIMIT