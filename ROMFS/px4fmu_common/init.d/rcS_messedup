#!nsh
#
# PX4FMU startup script.
#



set TUNE_ERR ML<<CP4CP4CP4CP4CP4
set LOG_FILE /fs/microsd/bootlog.txt

# Start CDC/ACM serial driver
sercon

# Try to mount the microSD card.
if mount -t vfat /dev/mmcsd0 /fs/microsd
then
    echo "[i] microSD mounted: /fs/microsd"
    # Start playing the startup tune
    tone_alarm start
else
    tone_alarm MBAGP
    if mkfatfs /dev/mmcsd0
    then
        if mount -t vfat /dev/mmcsd0 /fs/microsd
        then
            echo "[i] microSD card formatted"
        else
            echo "[i] format failed"
            tone_alarm MNBG
            set LOG_FILE /dev/null
        fi
    else
        set LOG_FILE /dev/null
    fi
fi


# Try to get an USB console
nshterm /dev/ttyACM0 &

# Start the ORB (first app to start)
uorb start

# Load parameters
if mtd start
then
    set PARAM_FILE /fs/mtd_params
fi

param select $PARAM_FILE
if param load
then
    echo "[param] Loaded: $PARAM_FILE"
else
    echo "[param] FAILED loading $PARAM_FILE"
    if param reset
    then
    fi
fi

# Start system state indicator
rgbled start

# Set AUTOCNF flag to use it in AUTOSTART scripts
echo "SYS_AUTOCONFIG=" $SYS_AUTOCONFIG
if param compare SYS_AUTOCONFIG 1
then
    # Wipe out params except RC*
    param reset_nostart RC*
    set AUTOCNF yes
else
    set AUTOCNF no
fi

# Set parameters and env variables for selected AUTOSTART
#sh /etc/init.d/4001_quad_x
#sh /etc/init.d/rc.mc_defaults
#################
set VEHICLE_TYPE mc
set PWM_RATE 400
set PWM_DISARMED 900
set PWM_MIN 1075
set PWM_MAX 2000
set MIXER quad_x    
set PWM_OUT 1234
unset MODE
#################


# If autoconfig parameter was set, reset it and save parameters
if [ $AUTOCNF == yes ]
then
    param set SYS_AUTOCONFIG 0
    param save
fi
unset AUTOCNF


# Check if PX4IO present and update firmware if needed

#if [ -f /etc/extras/px4io-v2_default.bin ]
#then
    set IO_FILE /etc/extras/px4io-v2_default.bin
#else
#    set IO_FILE /etc/extras/px4io-v1_default.bin
#fi

set IO_PRESENT no
if px4io checkcrc ${IO_FILE}
then
    echo "PX4IO CRC OK" >> $LOG_FILE

    set IO_PRESENT yes
else
    echo "PX4IO Trying to update" >> $LOG_FILE

    tone_alarm MLL32CP8MB

    if px4io start
    then
        # try to safe px4 io so motor outputs dont go crazy
        if px4io safety_on
        then
            # success! no-op
        else
            # px4io did not respond to the safety command
            px4io stop
        fi
    fi

    if px4io forceupdate 14662 ${IO_FILE}
    then
        usleep 500000
        if px4io checkcrc $IO_FILE
        then
            echo "PX4IO CRC OK after updating" >> $LOG_FILE
            tone_alarm MLL8CDE

            set IO_PRESENT yes
        else
            echo "PX4IO update failed" >> $LOG_FILE
            tone_alarm $TUNE_ERR
        fi
    else
        echo "PX4IO update failed" >> $LOG_FILE
        tone_alarm $TUNE_ERR
    fi
fi
unset IO_FILE

if [ $IO_PRESENT == no ]
then
    echo "[i] ERROR: PX4IO not found"
    tone_alarm $TUNE_ERR
fi

# waypoint storage
if dataman start
then
fi

# Sensors System (start before Commander so Preflight checks are properly run)

ms5611 start
mpu6000 start
adc start

if hmc5883 -C -T -X start
then
fi

if px4flow start
then
fi

sensors start


# Needs to be this early for in-air-restarts
commander start


# Start primary output

if px4io start
then
    sh /etc/init.d/rc.io rate to $PX4IO_LIMIT Hz failed!"

set MAVLINK_F "-r 1000"

    fi
else
   $MAVLINK_Flunset MAVLINK_F
a#
rm $TUNE_ERR
fi

mavlink st#
echo "SYS_COMPANION=" $SYS_COMPANION

art -r 1000

# MAVLink onboard / TELEM2
if param compare SYS_COMPANION 921600
then
    mavlink start -d /dev/ttyS2 -b 921600 -m onboard -r 20000
fi
if param compare SYS_COMPANION 57600
then
    mavlink start -d /d
#ev/ttyS2 -
#
#sh /etc/init.d/rc.loggingb 57600 -m onboard -r 1000
fi

# 
#Logging
sdlog2 start 
#-r 200 -a -b 22 -t

# M
ulticopters setup
echo "[i] MULTICOPTER"
param set MAV_TY
#sh /etc/init.d/rc.interface    
#######################

set SDCARD_MIXERS_PATH /fs/microsd/etc/mixers

#
# Load main mixer
#
set MIXER_FILE /etc/mixers/$MIXER.main.mix
set OUTPUT_DEV /dev/pwm_output0
PE 2

# Load mi$OUTPUT_DEVe$MIXER_FILE/pwm_output0 /etc/mixers/qu$MIXER_FILE "[ $OUTPUT_DEVxers/quad_x.main.mix on /dev/pwm_output0"
$MIXER_FILEading mixer: /etc/mixers/quad
unset MIXER_FILE_

if [ $PWM_OUT != none ]
then
    #x.main.mix"
    tone_alarm 
#qif [ $PWM_RATE != none ]
then
    uency, disarmed, min and max PWM 
fi

#
# Set disarmed, min and max PWM values
#
if [ $PWM_DISARMED != none ]
thenv    alues
pwm rate -c $PWM_OUT -r $PWM_RATE
p
fi
if [ $PWM_MIN != none ]
thenwm disarmed -c $PWM_OUT -p $PWM_DISA
fi
if [ $PWM_MAX != none ]
thenRMED
pwm min -c $PWM_OUT -p 
$PWM_MINfi

pwm max -c $PWM_OUT -p $PW

#######################
M_MAX

# Start standard multic
fi

#if [ $FAILSAFE != none ]
#then
#    pwm failsafe -d $OUTPUT_DEV $FAILSAFE
#fi

unset OUTPUT_DEV

#######################opter apps
attitude_estimator_ekf start
position_estimator_inav start
mc_att_control start
mc_pos_contro
#######################

#unset MIXER
#unset MAV_TYPE

l start
land_detector start multicopter

#


 Start the navigaor
#navigator start



# Star




#t any custom addons
se
#t FEXTRAS /fs/microsd/etc/extras.txt
if [ -f $FEXTRAS ]
then
    echo "[i] Addons script: $FEXTRAS"
    sh $FEXTRAS
fi
unset FEXTRAS



# Run no SD alarm last
if [ $LOG_FILE == /dev/nu






#if [ $EXIT_ON_END == yes ]
#then
#    echo "Exit from nsh"
#    exit
#fi
#unset EXIT_ON_END


ll ]
then
    echo "[i] No microSD card found"




    # Play SOS
    tone_alarm error
fi



# There is no further processing, so we can free some RAM
# XXX potentially unset all script variables.
unset TUNE_ERR
